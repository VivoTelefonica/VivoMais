@model VivoMais.Models.CarteiraViewModel
@{
    ViewBag.Title = "Index";
    if (Session["TipoMenu"].ToString() != "")
    {
        Layout = Session["TipoMenu"].ToString();
    }
    else
    {
        Session.Clear();
        Session.Abandon();
        FormsAuthentication.SignOut();
        Response.Redirect("/Acesso/Index");
    }
}

@* Javascript *@
<script type="text/javascript" src="~/Acesso/Js/jquery-2.2.1.js"></script>
<script type="text/javascript" src="~/Scripts/ajax.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {

        $("#txtDataIni").datepicker({
            dateFormat: 'dd/mm/yy',
            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado', 'Domingo'],
            dayNamesMin: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']
        });

        $("#txtDataFim").datepicker({
            dateFormat: 'dd/mm/yy',
            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado', 'Domingo'],
            dayNamesMin: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']
        });
    });

</script>

<div class="row">
    <div class="col-lg-12">
        <h3 class="page-header">Liberação da Carteira</h3>
    </div>
</div>
<div class="panel-body">
    <div class="row">
        <div class="col-lg-6">
            <div class="form-group">

                @using (Html.BeginForm("AbrirCarteira", "Carteira"))
                {
                    <div class="row">
                        <label>MÊS DA CARTEIRA:</label>
                        @Html.DropDownListFor(x => x.MesAbertura, new SelectList((System.Collections.IEnumerable)ViewData["MES"]), "SELECIONE", new { @id = "DDLMes", @class = "form-control", style = "width: 40%" })
                        @Html.ValidationMessageFor(x => x.MesAbertura, "", new { @class = "text-danger" })
                    </div>
                    <div class="row">
                        <label>A CARTEIRA SERÁ ABERTA EM:</label>
                    </div>
                    <div class="row">
                        <div>
                            <div class="form-inline">
                                <div class="form-group">
                                    @Html.TextBoxFor(x => x.DataAberturaCarteira, new { @id = "txtDataIni", @maxlength = "10", @onkeyup = "this.value=CompletaData(this.value);", @onkeypress = "return formatoNumero(event)", @class = "form-control" })
                                    <br />
                                    @Html.ValidationMessageFor(x => x.DataAberturaCarteira, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>a</label>
                                </div>
                                <div class="form-group">
                                    @Html.TextBoxFor(x => x.DataFechamentoCarteira, new { @id = "txtDataFim", @maxlength = "10", @onkeyup = "this.value=CompletaData(this.value);", @onkeypress = "return formatoNumero(event)", @class = "form-control" })
                                    <br />
                                    @Html.ValidationMessageFor(x => x.DataFechamentoCarteira, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <label>TIPO DE ABERTURA:</label>
                    </div>
                    <div class="row">
                        @Html.RadioButtonFor(x => x.TipoCarteira, "Abrir nova carteira", new { @checked = true }) <label>Abrir nova carteira</label>
                        <br />
                        @Html.RadioButtonFor(x => x.TipoCarteira, "Atualizar data de abertura") <label>Atualizar data de abertura</label>
                    </div>

                    <div class="row" style="margin-top:10px">
                        <input id="btnCarteira" class="btn btn-primary" type="submit" style="width:150px" value="Abrir Carteira" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>



