
@model VivoMais.Models.AcaoMarketingViewModel


<style type="text/css">
    body, html, input {
        font-family: sans-serif;
        font-size: 12pt;
    }

    #visualization {
        position: relative;
    }

    .menu {
        position: absolute;
        top: 0;
        right: 0;
        margin: 10px;
        z-index: 9999;
    }
</style>

<script src="~/js/Timeline/vis.js"></script>
<link href="~/js/Timeline/vis.css" rel="stylesheet" type="text/css" />
<script src="~/js/Timeline/googleAnalytics.js"></script>
<script type="text/javascript" src="~/Scripts/ajax.js"></script>
<script type="text/javascript">

    function FuncSucesso() {
        alert('Ação atualizada com Sucesso!');
    }

    function FuncError() {
        alert('Ocorreu um erro ao tentar processar sua solicitação!');
    }

</script>

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title" id="myModalLabel">VIVO MAIS+</h4>
</div>
<div class="panel-body">
    <div class="form-group">

        <div class="row">
            <div id="visualization">
                <div class="menu">
                    <input type="button" id="moveLeft" value="Esquerda" />
                    <input type="button" id="moveRight" value="Direita" />
                </div>
            </div>

            <script type="text/javascript">
                // create a timeline with some data


                $.ajax({
                    type: 'POST',
                    dataType: 'json',
                    url: '/AcaoMarketing/ObterTimeLine/',
                    success: function (response) {
                        var i = 0;

                        var items = new vis.DataSet();

                        for (i = 0; i < response.length; i++) {
                            items.add([{content: response[i].Status.Descricao, start: response[i].DataCadastro }]);
                        }



                        if (response[0].Acompanhamento != null)
                        {
                            items.add([{ content: 'Enviado para Marketing Territorial', start: response[0].Acompanhamento.EnviadoMarketingTerritorial }]);
                            items.add([{ content: 'REL Solicitada', start: response[0].Acompanhamento.SolicitacaoREL }]);
                            items.add([{ content: 'Enviado para Marketing Regional', start: response[0].Acompanhamento.EnviadoMarketingRegional }]);
                            items.add([{ content: 'Enviado para Mídia', start: response[0].Acompanhamento.EnviadoMidia }]);
                            items.add([{ content: 'Enviado para Auditoria', start: response[0].Acompanhamento.EnviadoAuditoria }]);
                            items.add([{ content: 'Enviado para Janela Única', start: response[0].Acompanhamento.EnviadoJU }]);
                        }


                        

                        var container = document.getElementById('visualization');
                        //var items = new vis.DataSet([


                        var options = {};
                        var timeline = new vis.Timeline(container, items, options);


                        function move (percentage) {
                            var range = timeline.getWindow();
                            var interval = range.end - range.start;

                            timeline.setWindow({
                                start: range.start.valueOf() - interval * percentage,
                                end:   range.end.valueOf()   - interval * percentage
                            });
                        }


                        function zoom (percentage) {
                            var range = timeline.getWindow();
                            var interval = range.end - range.start;

                            timeline.setWindow({
                                start: range.start.valueOf() - interval * percentage,
                                end:   range.end.valueOf()   + interval * percentage
                            });
                        }

                        // attach events to the navigation buttons
                        document.getElementById('moveLeft').onclick  = function () { move( 0.2); };
                        document.getElementById('moveRight').onclick = function () { move(-0.2); };


                        
                    },
                    error: function (response) {
                        alert("error!");
                    }
                });

            </script>

        </div>

            @using (Ajax.BeginForm("AtualizarAcompanhamento", "AcaoMarketing", null, new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "feedback", HttpMethod = "Post", OnSuccess = "FuncSucesso", OnFailure = "FuncError" }, new { @id = "formID" }))
            {

                <div class="row">
                    <div class="col-sm-2">
                        <label>UF:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Parceiro.Uf, new { @id = "txtUf", @class = "form-control", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Parceiro.Uf, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-10">
                        <label>ADABAS:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Parceiro.Vendedor, new { @id = "txtAdabas", @class = "form-control", style = "width: 15%", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Parceiro.Vendedor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-2">
                        <label>CANAL:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Parceiro.Canal, new { @id = "txtCanal", @class = "form-control", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Parceiro.Canal, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-10">
                        <label>RAZÃO SOCIAL:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Parceiro.RazaoSocial, new { @id = "txtRazaoSocial", @class = "form-control", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Parceiro.RazaoSocial, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-2">
                        <label>R$ TOTAL:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.ValorTotalVivo, new { @id = "txtTotal", @class = "form-control", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.ValorTotalVivo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2">
                        <label>COMPETENCIA:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.MesAcao, new { @id = "txtMesAcao", @class = "form-control", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.MesAcao, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-8">
                        <label>DOC SAP:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.DocSAP, new { @id = "txtDocSap", @class = "form-control", style = "width: 20%", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.DocSAP, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-2">
                        <label>PROTOCOLO:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.NumeroProtocolo, new { @id = "txtNumeroProtocolo", @class = "form-control", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.NumeroProtocolo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2">
                        <label>DATA DO PROTOCOLO:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.DataSolicitacaoProtocolo, new { @id = "txtDataSolicitacaoProtocolo", @class = "form-control", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.DataSolicitacaoProtocolo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-8">
                        <label>VENCIMENTO DO PROTOCOLO:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.DataVencimentoProtocolo, new { @id = "txtDataVencimentoProtocolo", @class = "form-control", style = "width: 20%", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.DataVencimentoProtocolo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-2">
                        <label>REL:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.Rel, new { @id = "txtREL", @class = "form-control", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.Rel, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2">
                        <label>DATA DA REL:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.DataSolicitacaoRel, new { @id = "txtDataSolicitacaoRel", @class = "form-control", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.DataSolicitacaoRel, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-8">
                        <label>VENCIMENTO DA REL:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.DataVencimentoRel, new { @id = "txtDataVencimentoRel", @class = "form-control", style = "width: 20%", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.DataVencimentoRel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-3">
                        <label>ENVIO MKT TERRITORIAL:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.EnviadoMarketingTerritorial, new { @id = "txtEnviadoMarketingTerritorial", @class = "form-control", @maxlength = "10", @onkeyup = "this.value=CompletaData(this.value);", @onkeypress = "return formatoNumero(event)", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.EnviadoMarketingTerritorial, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-9">
                        <label>DATA SOLICITAÇÃO REL:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.SolicitacaoREL, new { @id = "txtSolicitacaoREL", @class = "form-control", style = "width: 20%", @readonly = "readonly", @enable = "false", @maxlength = "10", @onkeyup = "this.value=CompletaData(this.value);", @onkeypress = "return formatoNumero(event)" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.SolicitacaoREL, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-2">
                        <label>ENVIO MKT REGIONAL:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.EnviadoMarketingRegional, new { @id = "txtEnviadoMarketingRegional", @class = "form-control", @maxlength = "10", @onkeyup = "this.value=CompletaData(this.value);", @onkeypress = "return formatoNumero(event)", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.EnviadoMarketingRegional, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-10">
                        <label>ENVIADO PARA MIDIA:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.EnviadoMidia, new { @id = "txtEnviadoMidia", @class = "form-control", style = "width: 20%", @maxlength = "10", @onkeyup = "this.value=CompletaData(this.value);", @onkeypress = "return formatoNumero(event)", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.EnviadoMidia, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-2">
                        <label>ENVIO AUDITORIA:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.EnviadoAuditoria, new { @id = "txtEnviadoAuditoria", @class = "form-control", @maxlength = "10", @onkeyup = "this.value=CompletaData(this.value);", @onkeypress = "return formatoNumero(event)", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.EnviadoAuditoria, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-10">
                        <label>ENVIADO PARA JANELA UNICA:</label>
                        @Html.TextBoxFor(x => x.AcaoMarketing.Acompanhamento.EnviadoJU, new { @id = "txtEnviadoJU", @class = "form-control", style = "width: 20%", @maxlength = "10", @onkeyup = "this.value=CompletaData(this.value);", @onkeypress = "return formatoNumero(event)", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.EnviadoJU, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <label>STATUS PAGAMENTO:</label>
                        @Html.DropDownListFor(x => x.AcaoMarketing.Acompanhamento.StatusPagamento, new List<SelectListItem>
                        {
                            new SelectListItem{ Text="PENDENTE"},
                            new SelectListItem{ Text="PAGO"},
                            new SelectListItem{ Text="A. APROVAÇÕES"},
                            new SelectListItem{ Text="A. LANÇAMENTO"},
                            new SelectListItem{ Text="A. VENCIDO"}
                        }, "SELECIONE", new { @id = "DDLStatus", @class = "form-control", style = "width: 20%", @readonly = "readonly", @enable = "false" })
                        @Html.ValidationMessageFor(x => x.AcaoMarketing.Acompanhamento.StatusPagamento, "", new { @class = "text-danger" })
                    </div>
                </div>

            }


        </div>
</div>
