@model VivoMais.Models.LinhaTesteViewModel
@{
    ViewBag.Title = "Index";
    if (Session["TipoMenu"].ToString() != "")
    {
        Layout = Session["TipoMenu"].ToString();
    }
    else
    {
        Session.Clear();
        Session.Abandon();
        FormsAuthentication.SignOut();
        Response.Redirect("/Acesso/Index");
    }
}

@* Javascript *@
<script type="text/javascript" src="~/Scripts/jquery-1.8.0.js"></script>
<script type="text/javascript" src="~/Scripts/ajax.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {


        $("#txtDataInicio").datepicker({
            dateFormat: 'dd/mm/yy',
            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado', 'Domingo'],
            dayNamesMin: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']
        });

        $("#txtDataFim").datepicker({
            dateFormat: 'dd/mm/yy',
            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado', 'Domingo'],
            dayNamesMin: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']
        });
    });

</script>

@if (null != ViewBag.result)
{
    <script type="text/javascript">
    alert(unescape('@ViewBag.result'));
    </script>
}


<div class="row">
    <div class="col-lg-12">
        <h3 class="page-header">Linha Teste</h3>
    </div>
</div>
<div class="panel-body">
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
            
                @using (Html.BeginForm("InserirLinhaTeste", "LinhaTeste", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="row">
                        <div class="col-sm-7">
                            <label>COLABORADOR:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.Colaborador, new { @id = "txtColaborador", @class = "form-control", placeholder = "Colaborador" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Colaborador, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-5">
                            <label>E-MAIL:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.Email, new { @id = "txtEmail", @class = "form-control", placeholder = "E-mail" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-4">
                            <label>TIPO:</label>
                            @Html.DropDownListFor(x => x.LinhaTeste.Tipo, new SelectList(new List<string> { 
                               "APARELHO + SIMCARD PARA TESTE", 
                               "LINHA TESTE + APARELHO", 
                               "LINHA TESTE + APARELHO + SIMCARD",
                               "LINHA TESTE + SIMCARD", 
                               "PRORROGAÇÃO LINHA TESTE", 
                               "RECARGA TESTE", 
                               "SOMENTE APARELHO PARA TESTE", 
                               "SOMENTE LINHA TESTE", 
                               "SOMENTE SIMCARD PARA TESTE"
                       }),"SELECIONE", new { @id = "txtTipo", @class = "form-control", placeholder = "Tipo" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Tipo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-8">
                            <label>MODALIDADE:</label>
                            @Html.DropDownListFor(x => x.LinhaTeste.Modalidade, new SelectList(new List<string> { 
                               "ALARME DE LOJA/ERB", 
                               "DEGUSTAÇÃO", 
                               "DEMONSTRAÇÃO",
                               "LINHA EXPRESSA", 
                               "OUTROS/ESPECIFICAR NA JUSTIFICATIVA", 
                               "PABX", 
                               "PORTAL DA VOZ", 
                               "REPETIDOR", 
                               "ROAMING INTERNACIONAL",
                               "TESTE DE FATURAMENTO",
                               "TESTE DE TRÁFEGO",
                               "TREINAMENTO"
                           }), "SELECIONE", new { @id = "txtModalidade", @class = "form-control", placeholder = "Modalidade", style = "width: 53%" })
                           @Html.ValidationMessageFor(x => x.LinhaTeste.Modalidade, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-3">
                            <label>PLANO:</label>
                            @Html.DropDownListFor(x => x.LinhaTeste.Plano, new SelectList(new List<string> { 
                               "PLANO TESTE NOVO", 
                               "TESTE VIVO FIXO"
                           }), "SELECIONE", new { @id = "txtPlano", @class = "form-control", placeholder = "Plano" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Plano, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-7">
                            <label>DIRETORIA:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.Diretoria, new { @id = "txtDiretoria", @class = "form-control", placeholder = "Diretoria", style = "width: 18%" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Diretoria, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-7">
                            <label>USUARIO LINHA:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.UsuarioLinha, new { @id = "txtUsuarioLinha", @class = "form-control", placeholder = "Usuario Linha" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.UsuarioLinha, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-5">
                            <label>STATUS LINHA:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.StatusLinha, new { @id = "txtStatusLinha", @class = "form-control", Value = "ATIVA", placeholder = "Status Linha", style = "width: 25%" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.StatusLinha, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-2">
                            <label>LINHA:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.Linha, new { @id = "txtLinha", @OnKeyPress = "formatarMascara('## # ####-####', this);", @maxlength = "14", @class = "form-control", placeholder = "Linha" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Linha, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-5">
                            <label>ICCID:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.Iccid, new { @id = "txtIccid", @class = "form-control", placeholder = "ICCID" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Iccid, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-sm-5">
                            <label>CANAL:</label>
                            @Html.DropDownListFor(x => x.LinhaTeste.Canal, new SelectList(new List<string> { 
                               "ALTERNATIVOS PF", 
                               "ALTERNATIVOS PJ", 
                               "CALL CENTER",
                               "LOJA PRÓPRIA", 
                               "RECARGA", 
                               "REVENDA", 
                               "VAREJO", 
                               "PJ", 
                               "REDES"
                           }), "SELECIONE", new { @id = "txtLinha", @class = "form-control", placeholder = "Canal", style = "width: 45%" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Linha, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-sm-2">
                            <label>DATA INICIO:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.DataInicio, new { @id = "txtDataInicio", @class = "form-control",  placeholder = "Data Inicio" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.DataInicio, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-sm-2">
                            <label>DATA FINAL:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.DataFim, new { @id = "txtDataFim", @class = "form-control", placeholder = "Data Fim" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.DataFim, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-sm-8">
                            <label>LOCALIDADE:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.Localidade, new { @id = "txtLocalidade", @class = "form-control", placeholder = "Localidade", style = "width: 45%" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Localidade, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <label>OBS:</label>
                            @Html.TextAreaFor(x => x.LinhaTeste.Obs, new { @id = "txtOBS", @class = "form-control", placeholder = "Observação" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Obs, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-3">
                            <label>NÚMERO DO FORMULARIO:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.NumeroFormulario, new { @id = "txtNumeroFormulario", @class = "form-control", placeholder = "Número Formulário" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.NumeroFormulario, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-sm-9">
                            <label>REGIONAL:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.Regional, new { @id = "txtRegional", @class = "form-control", placeholder = "Regional", Value = "NE", style = "width: 10%" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Regional, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <label>STATUS:</label>
                            @Html.TextBoxFor(x => x.LinhaTeste.Status, new { @id = "txtStatus", @class = "form-control", placeholder = "Status", style = "width: 25%" })
                            @Html.ValidationMessageFor(x => x.LinhaTeste.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <label>ARQUIVO:</label>
                            <input type="file" class="form-control" name="UploadedFile" style="width:40%" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <input id="btnLinhaTeste" class="btn btn-primary" type="submit" style="width:150px" value="Cadastrar" />
                        </div>
                    </div>
                }

            

            </div>
        </div>
    </div>
</div>
